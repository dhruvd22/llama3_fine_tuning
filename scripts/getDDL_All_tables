-- minor changes required for data formatting

WITH cols AS (
    SELECT
        c.table_schema,
        c.table_name,
        string_agg(
            format(
                '    %I %s%s%s',
                c.column_name,
                pg_catalog.format_type(a.atttypid, a.atttypmod),
                CASE WHEN c.is_nullable = 'NO' THEN ' NOT NULL' ELSE '' END,
                COALESCE(' DEFAULT ' || c.column_default, '')
            ),
            E',\n' ORDER BY c.ordinal_position
        ) AS col_def
    FROM information_schema.columns c
    JOIN pg_catalog.pg_attribute a
      ON a.attname = c.column_name
     AND a.attrelid = (quote_ident(c.table_schema)||'.'||quote_ident(c.table_name))::regclass
    WHERE c.table_schema = 'public'
    GROUP BY c.table_schema, c.table_name
),
pks AS (
    SELECT
        tc.table_schema,
        tc.table_name,
        format(
            '    CONSTRAINT %I PRIMARY KEY (%s)',
            tc.constraint_name,
            string_agg(quote_ident(kcu.column_name), ', ')
        ) AS pk_def
    FROM information_schema.table_constraints tc
    JOIN information_schema.key_column_usage kcu
      ON tc.constraint_name = kcu.constraint_name
     AND tc.table_schema   = kcu.table_schema
    WHERE tc.constraint_type = 'PRIMARY KEY'
      AND tc.table_schema    = 'public'
    GROUP BY tc.table_schema, tc.table_name, tc.constraint_name
)
SELECT
    format(
        'CREATE TABLE %I.%I (\n%s%s\n);',
        c.table_schema,
        c.table_name,
        c.col_def,
        COALESCE(E',\n' || p.pk_def, '')
    ) AS ddl
FROM cols c
LEFT JOIN pks p
  ON p.table_schema = c.table_schema
 AND p.table_name   = c.table_name
ORDER BY c.table_name;
